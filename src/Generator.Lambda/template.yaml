AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    Sample SAM Template for dynamodb-crud

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60
    Environment:
      Variables:
        TABLE_NAME: !Ref EntitiesTable
    Runtime: dotnetcore2.0
    CodeUri: bin/Release/netcoreapp2.0/publish



Resources:

    # Get all entities for a given user id
    # GET /users/user0/entities
    GetEntities:
      Type: AWS::Serverless::Function
      Properties:
        Handler: Generator.Lambda::Generator.Lambda.EntitiesFunctions::GetListFunctionHandlerAsync
        Policies:
          - DynamoDBReadPolicy:
              TableName: !Ref EntitiesTable
        Events:
          GetList:
            Type: Api
            Properties:
              Path: /users/{userid}/entities
              Method: GET
    
    # Get a specific entity given user id and entity id
    # GET /users/user0/entities/entity0
    GetEntity:
      Type: AWS::Serverless::Function
      Properties:
        Handler: Generator.Lambda::Generator.Lambda.EntitiesFunctions::GetItemFunctionHandlerAsync
        Policies:
          - DynamoDBReadPolicy:
              TableName: !Ref EntitiesTable
        Events:
          GetItem:
            Type: Api
            Properties:
              Path: /users/{userid}/entities/{entityid}
              Method: GET

    # Create a new entity for a given user 
    # POST /users/user0/entities {Name:"Person"}
    PostEntity:
      Type: AWS::Serverless::Function
      Properties:
        Handler: Generator.Lambda::Generator.Lambda.EntitiesFunctions::PostFunctionHandlerAsync
        Policies:
          - DynamoDBCrudPolicy:
              TableName: !Ref EntitiesTable
        Events:
          Create:
            Type: Api
            Properties:
              Path: /users/{userid}/entities
              Method: POST

    # Updates an entity for a given user and entity id 
    # PUT /users/user0/entities/1 {Name:"Person -- updated"}
    PutEntity:
      Type: AWS::Serverless::Function
      Properties:
        Handler: Generator.Lambda::Generator.Lambda.EntitiesFunctions::PutFunctionHandlerAsync
        Policies:
          - DynamoDBCrudPolicy:
              TableName: !Ref EntitiesTable
        Events:
          Update:
            Type: Api
            Properties:
              Path: /users/{userid}/entities/{entityid}
              Method: PUT

    # Delete an entity given a user and entity id
    # DELETE /users/user0/entities/1
    DeleteEntity:
      Type: AWS::Serverless::Function
      Properties:
        Handler: Generator.Lambda::Generator.Lambda.EntitiesFunctions::DeleteFunctionHandlerAsync
        Policies:
          - DynamoDBCrudPolicy:
              TableName: !Ref EntitiesTable
        Events:
          Delete:
            Type: Api
            Properties:
              Path: /users/{userid}/entities/{entityid}
              Method: DELETE
    
    # DynamoDb table
    EntitiesTable:
      Type: AWS::DynamoDB::Table
      Properties: 
        KeySchema: 
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: entity_id
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: entity_id
            AttributeType: S
          - AttributeName: entity_name
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        LocalSecondaryIndexes:
          - IndexName: entity_id_name
            KeySchema: 
              - AttributeName: user_id
                KeyType: HASH
              - AttributeName: entity_name
                KeyType: RANGE
            Projection:
                ProjectionType: KEYS_ONLY


Outputs:

    EntitiesApiUrl:
      Description: "API Gateway endpoint URL for Prod stage for Hello World function"
      Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/users/0/entities"

    EntitiesTableName:
      Description: "DynamoDb table for Entities"
      Value: !Ref EntitiesTable

